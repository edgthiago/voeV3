/**
 * Teste do BackupService ap√≥s remo√ß√£o das vulnerabilidades
 */
require('dotenv').config();

// Simular logger service se n√£o existir
if (!require('fs').existsSync('./services/loggerService.js')) {
    const mockLogger = {
        info: (...args) => console.log('[INFO]', ...args),
        warn: (...args) => console.warn('[WARN]', ...args),
        error: (...args) => console.error('[ERROR]', ...args)
    };
    
    module.exports = {
        logger: mockLogger,
        loggers: {
            database: mockLogger
        }
    };
}

try {
    console.log('üß™ Testando BackupService...');
    
    const backupService = require('./services/backupService');
    
    console.log('‚úÖ BackupService carregado com sucesso!');
    console.log('üìä M√©todos dispon√≠veis:');
    console.log('- backupDatabase()');
    console.log('- backupLogs()');
    console.log('- fullBackup()');
    console.log('- manualBackup()');
    console.log('- getBackupStats()');
    console.log('- verifyBackups()');
    console.log('- cleanupOldBackups()');
    
    // Teste b√°sico de stats
    backupService.getBackupStats().then(stats => {
        console.log('üìà Estat√≠sticas de backup:', stats);
    }).catch(err => {
        console.log('‚ö†Ô∏è Erro ao obter stats (normal se n√£o h√° backups ainda):', err.message);
    });
    
} catch (error) {
    console.error('‚ùå Erro ao carregar BackupService:', error.message);
    console.error(error.stack);
}
