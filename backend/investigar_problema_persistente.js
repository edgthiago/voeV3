const mysql = require('mysql2/promise');
require('dotenv').config();

async function investigarProblemaEstoque() {
  try {
    console.log('üîç INVESTIGA√á√ÉO PROFUNDA - PROBLEMA PERSISTENTE DE ESTOQUE\n');
    
    const conexao = await mysql.createConnection({
      host: process.env.DB_HOST || 'localhost',
      port: process.env.DB_PORT || 3306,
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '1234',
      database: process.env.DB_NAME || 'projetofgt'
    });

    console.log('1Ô∏è‚É£ Estado atual do banco...');
    let [rows] = await conexao.execute('SELECT id, nome, quantidade_estoque, preco, categoria FROM produtos WHERE id = 1');
    console.log(`   üì¶ Produto: ${rows[0].nome}`);
    console.log(`   üìä Estoque atual: ${rows[0].quantidade_estoque}`);
    console.log(`   üí∞ Pre√ßo: ${rows[0].preco}`);
    console.log(`   üè∑Ô∏è Categoria: ${rows[0].categoria}`);

    console.log('\n2Ô∏è‚É£ Verificando logs de altera√ß√µes recentes...');
    try {
      const [logs] = await conexao.execute(`
        SELECT * FROM information_schema.processlist 
        WHERE db = '${process.env.DB_NAME || 'projetofgt'}' 
        AND command != 'Sleep'
      `);
      console.log(`   üìã Processos ativos: ${logs.length}`);
      logs.forEach(log => {
        console.log(`      - ${log.USER}: ${log.INFO || 'No info'}`);
      });
    } catch (e) {
      console.log('   ‚ö†Ô∏è N√£o foi poss√≠vel verificar logs');
    }

    console.log('\n3Ô∏è‚É£ Verificando estrutura da tabela produtos...');
    const [structure] = await conexao.execute('DESCRIBE produtos');
    console.log('   üìã Colunas da tabela:');
    structure.forEach(col => {
      console.log(`      - ${col.Field}: ${col.Type} (${col.Null === 'YES' ? 'NULL' : 'NOT NULL'})`);
    });

    console.log('\n4Ô∏è‚É£ Testando atualiza√ß√£o manual...');
    console.log('   ‚û°Ô∏è Atualizando para 50...');
    await conexao.execute('UPDATE produtos SET quantidade_estoque = 50 WHERE id = 1');
    
    [rows] = await conexao.execute('SELECT quantidade_estoque FROM produtos WHERE id = 1');
    console.log(`   ‚úÖ Ap√≥s UPDATE: ${rows[0].quantidade_estoque}`);

    console.log('\n5Ô∏è‚É£ Aguardando 2 segundos...');
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    [rows] = await conexao.execute('SELECT quantidade_estoque FROM produtos WHERE id = 1');
    console.log(`   üîÑ Ap√≥s 2s: ${rows[0].quantidade_estoque}`);

    console.log('\n6Ô∏è‚É£ Verificando se existe algum valor padr√£o...');
    const [defaults] = await conexao.execute(`
      SELECT COLUMN_NAME, COLUMN_DEFAULT, IS_NULLABLE, COLUMN_TYPE 
      FROM INFORMATION_SCHEMA.COLUMNS 
      WHERE TABLE_SCHEMA = '${process.env.DB_NAME || 'projetofgt'}' 
      AND TABLE_NAME = 'produtos' 
      AND COLUMN_NAME = 'quantidade_estoque'
    `);
    console.log('   üìã Configura√ß√£o da coluna quantidade_estoque:');
    defaults.forEach(def => {
      console.log(`      Default: ${def.COLUMN_DEFAULT}`);
      console.log(`      Nullable: ${def.IS_NULLABLE}`);
      console.log(`      Type: ${def.COLUMN_TYPE}`);
    });

    await conexao.end();
  } catch (error) {
    console.error('‚ùå Erro na investiga√ß√£o:', error.message);
  }
}

investigarProblemaEstoque();
